// Code generated from compiler\TSwiftLexer.g4 by ANTLR 4.13.0. DO NOT EDIT.

package compiler

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type TSwiftLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var TSwiftLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func tswiftlexerLexerInit() {
	staticData := &TSwiftLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "", "", "", "';'", "'let'", "'var'", "'func'", "'struct'", "'if'",
		"'else'", "'switch'", "'case'", "'default'", "'for'", "'while'", "'break'",
		"'continue'", "'return'", "'guard'", "'inout'", "'in'", "", "", "",
		"", "'nil'", "", "'+'", "'-'", "'*'", "'/'", "'%'", "'='", "'+='", "'-='",
		"'=='", "'!='", "'<'", "'<='", "'>'", "'>='", "'&&'", "'||'", "'!'",
		"'('", "')'", "'{'", "'}'", "'['", "']'", "','", "'.'", "':'", "'->'",
		"'?'", "'&'",
	}
	staticData.SymbolicNames = []string{
		"", "WS", "COMMENT", "MULTILINE_COMMENT", "SEMICOLON", "LET_KW", "VAR_KW",
		"FUNC_KW", "STRUCT_KW", "IF_KW", "ELSE_KW", "SWITCH_KW", "CASE_KW",
		"DEFAULT_KW", "FOR_KW", "WHILE_KW", "BREAK_KW", "CONTINUE_KW", "RETURN_KW",
		"GUARD_KW", "INOUT_KW", "IN_KW", "INTEGER_LITERAL", "FLOAT_LITERAL",
		"STRING_LITERAL", "BOOL_LITERAL", "NIL_LITERAL", "ID", "PLUS", "MINUS",
		"MULT", "DIV", "MOD", "EQUALS", "PLUS_EQUALS", "MINUS_EQUALS", "EQUALS_EQUALS",
		"NOT_EQUALS", "LESS_THAN", "LESS_THAN_OR_EQUAL", "GREATER_THAN", "GREATER_THAN_OR_EQUAL",
		"AND", "OR", "NOT", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "LBRACK",
		"RBRACK", "COMMA", "DOT", "COLON", "ARROW", "INTERROGATION", "ANPERSAND",
	}
	staticData.RuleNames = []string{
		"WS", "COMMENT", "MULTILINE_COMMENT", "SEMICOLON", "LET_KW", "VAR_KW",
		"FUNC_KW", "STRUCT_KW", "IF_KW", "ELSE_KW", "SWITCH_KW", "CASE_KW",
		"DEFAULT_KW", "FOR_KW", "WHILE_KW", "BREAK_KW", "CONTINUE_KW", "RETURN_KW",
		"GUARD_KW", "INOUT_KW", "IN_KW", "INTEGER_LITERAL", "FLOAT_LITERAL",
		"STRING_LITERAL", "BOOL_LITERAL", "NIL_LITERAL", "ID", "PLUS", "MINUS",
		"MULT", "DIV", "MOD", "EQUALS", "PLUS_EQUALS", "MINUS_EQUALS", "EQUALS_EQUALS",
		"NOT_EQUALS", "LESS_THAN", "LESS_THAN_OR_EQUAL", "GREATER_THAN", "GREATER_THAN_OR_EQUAL",
		"AND", "OR", "NOT", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "LBRACK",
		"RBRACK", "COMMA", "DOT", "COLON", "ARROW", "INTERROGATION", "ANPERSAND",
		"ESC_SEQ",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 56, 365, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 1, 0,
		4, 0, 117, 8, 0, 11, 0, 12, 0, 118, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1,
		5, 1, 127, 8, 1, 10, 1, 12, 1, 130, 9, 1, 1, 1, 3, 1, 133, 8, 1, 1, 1,
		1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 5, 2, 141, 8, 2, 10, 2, 12, 2, 144, 9, 2,
		1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 4, 1, 5,
		1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 7,
		1, 7, 1, 7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 10,
		1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 11, 1,
		11, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13,
		1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1,
		15, 1, 15, 1, 15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16,
		1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 18, 1,
		18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19,
		1, 20, 1, 20, 1, 20, 1, 21, 4, 21, 249, 8, 21, 11, 21, 12, 21, 250, 1,
		22, 4, 22, 254, 8, 22, 11, 22, 12, 22, 255, 1, 22, 1, 22, 4, 22, 260, 8,
		22, 11, 22, 12, 22, 261, 1, 23, 1, 23, 1, 23, 5, 23, 267, 8, 23, 10, 23,
		12, 23, 270, 9, 23, 1, 23, 1, 23, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1,
		24, 1, 24, 1, 24, 1, 24, 3, 24, 283, 8, 24, 1, 25, 1, 25, 1, 25, 1, 25,
		1, 26, 1, 26, 5, 26, 291, 8, 26, 10, 26, 12, 26, 294, 9, 26, 1, 27, 1,
		27, 1, 28, 1, 28, 1, 29, 1, 29, 1, 30, 1, 30, 1, 31, 1, 31, 1, 32, 1, 32,
		1, 33, 1, 33, 1, 33, 1, 34, 1, 34, 1, 34, 1, 35, 1, 35, 1, 35, 1, 36, 1,
		36, 1, 36, 1, 37, 1, 37, 1, 38, 1, 38, 1, 38, 1, 39, 1, 39, 1, 40, 1, 40,
		1, 40, 1, 41, 1, 41, 1, 41, 1, 42, 1, 42, 1, 42, 1, 43, 1, 43, 1, 44, 1,
		44, 1, 45, 1, 45, 1, 46, 1, 46, 1, 47, 1, 47, 1, 48, 1, 48, 1, 49, 1, 49,
		1, 50, 1, 50, 1, 51, 1, 51, 1, 52, 1, 52, 1, 53, 1, 53, 1, 53, 1, 54, 1,
		54, 1, 55, 1, 55, 1, 56, 1, 56, 1, 56, 2, 128, 142, 0, 57, 1, 1, 3, 2,
		5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25,
		13, 27, 14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43,
		22, 45, 23, 47, 24, 49, 25, 51, 26, 53, 27, 55, 28, 57, 29, 59, 30, 61,
		31, 63, 32, 65, 33, 67, 34, 69, 35, 71, 36, 73, 37, 75, 38, 77, 39, 79,
		40, 81, 41, 83, 42, 85, 43, 87, 44, 89, 45, 91, 46, 93, 47, 95, 48, 97,
		49, 99, 50, 101, 51, 103, 52, 105, 53, 107, 54, 109, 55, 111, 56, 113,
		0, 1, 0, 7, 3, 0, 9, 10, 13, 13, 32, 32, 1, 1, 10, 10, 1, 0, 48, 57, 4,
		0, 10, 10, 13, 13, 34, 34, 92, 92, 3, 0, 65, 90, 95, 95, 97, 122, 4, 0,
		48, 57, 65, 90, 95, 95, 97, 122, 8, 0, 34, 34, 39, 39, 92, 92, 98, 98,
		102, 102, 110, 110, 114, 114, 116, 116, 373, 0, 1, 1, 0, 0, 0, 0, 3, 1,
		0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1,
		0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19,
		1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0,
		27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0,
		0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0,
		0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0,
		0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1,
		0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65,
		1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0,
		73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 79, 1, 0, 0, 0,
		0, 81, 1, 0, 0, 0, 0, 83, 1, 0, 0, 0, 0, 85, 1, 0, 0, 0, 0, 87, 1, 0, 0,
		0, 0, 89, 1, 0, 0, 0, 0, 91, 1, 0, 0, 0, 0, 93, 1, 0, 0, 0, 0, 95, 1, 0,
		0, 0, 0, 97, 1, 0, 0, 0, 0, 99, 1, 0, 0, 0, 0, 101, 1, 0, 0, 0, 0, 103,
		1, 0, 0, 0, 0, 105, 1, 0, 0, 0, 0, 107, 1, 0, 0, 0, 0, 109, 1, 0, 0, 0,
		0, 111, 1, 0, 0, 0, 1, 116, 1, 0, 0, 0, 3, 122, 1, 0, 0, 0, 5, 136, 1,
		0, 0, 0, 7, 150, 1, 0, 0, 0, 9, 152, 1, 0, 0, 0, 11, 156, 1, 0, 0, 0, 13,
		160, 1, 0, 0, 0, 15, 165, 1, 0, 0, 0, 17, 172, 1, 0, 0, 0, 19, 175, 1,
		0, 0, 0, 21, 180, 1, 0, 0, 0, 23, 187, 1, 0, 0, 0, 25, 192, 1, 0, 0, 0,
		27, 200, 1, 0, 0, 0, 29, 204, 1, 0, 0, 0, 31, 210, 1, 0, 0, 0, 33, 216,
		1, 0, 0, 0, 35, 225, 1, 0, 0, 0, 37, 232, 1, 0, 0, 0, 39, 238, 1, 0, 0,
		0, 41, 244, 1, 0, 0, 0, 43, 248, 1, 0, 0, 0, 45, 253, 1, 0, 0, 0, 47, 263,
		1, 0, 0, 0, 49, 282, 1, 0, 0, 0, 51, 284, 1, 0, 0, 0, 53, 288, 1, 0, 0,
		0, 55, 295, 1, 0, 0, 0, 57, 297, 1, 0, 0, 0, 59, 299, 1, 0, 0, 0, 61, 301,
		1, 0, 0, 0, 63, 303, 1, 0, 0, 0, 65, 305, 1, 0, 0, 0, 67, 307, 1, 0, 0,
		0, 69, 310, 1, 0, 0, 0, 71, 313, 1, 0, 0, 0, 73, 316, 1, 0, 0, 0, 75, 319,
		1, 0, 0, 0, 77, 321, 1, 0, 0, 0, 79, 324, 1, 0, 0, 0, 81, 326, 1, 0, 0,
		0, 83, 329, 1, 0, 0, 0, 85, 332, 1, 0, 0, 0, 87, 335, 1, 0, 0, 0, 89, 337,
		1, 0, 0, 0, 91, 339, 1, 0, 0, 0, 93, 341, 1, 0, 0, 0, 95, 343, 1, 0, 0,
		0, 97, 345, 1, 0, 0, 0, 99, 347, 1, 0, 0, 0, 101, 349, 1, 0, 0, 0, 103,
		351, 1, 0, 0, 0, 105, 353, 1, 0, 0, 0, 107, 355, 1, 0, 0, 0, 109, 358,
		1, 0, 0, 0, 111, 360, 1, 0, 0, 0, 113, 362, 1, 0, 0, 0, 115, 117, 7, 0,
		0, 0, 116, 115, 1, 0, 0, 0, 117, 118, 1, 0, 0, 0, 118, 116, 1, 0, 0, 0,
		118, 119, 1, 0, 0, 0, 119, 120, 1, 0, 0, 0, 120, 121, 6, 0, 0, 0, 121,
		2, 1, 0, 0, 0, 122, 123, 5, 47, 0, 0, 123, 124, 5, 47, 0, 0, 124, 128,
		1, 0, 0, 0, 125, 127, 9, 0, 0, 0, 126, 125, 1, 0, 0, 0, 127, 130, 1, 0,
		0, 0, 128, 129, 1, 0, 0, 0, 128, 126, 1, 0, 0, 0, 129, 132, 1, 0, 0, 0,
		130, 128, 1, 0, 0, 0, 131, 133, 7, 1, 0, 0, 132, 131, 1, 0, 0, 0, 133,
		134, 1, 0, 0, 0, 134, 135, 6, 1, 0, 0, 135, 4, 1, 0, 0, 0, 136, 137, 5,
		47, 0, 0, 137, 138, 5, 42, 0, 0, 138, 142, 1, 0, 0, 0, 139, 141, 9, 0,
		0, 0, 140, 139, 1, 0, 0, 0, 141, 144, 1, 0, 0, 0, 142, 143, 1, 0, 0, 0,
		142, 140, 1, 0, 0, 0, 143, 145, 1, 0, 0, 0, 144, 142, 1, 0, 0, 0, 145,
		146, 5, 42, 0, 0, 146, 147, 5, 47, 0, 0, 147, 148, 1, 0, 0, 0, 148, 149,
		6, 2, 0, 0, 149, 6, 1, 0, 0, 0, 150, 151, 5, 59, 0, 0, 151, 8, 1, 0, 0,
		0, 152, 153, 5, 108, 0, 0, 153, 154, 5, 101, 0, 0, 154, 155, 5, 116, 0,
		0, 155, 10, 1, 0, 0, 0, 156, 157, 5, 118, 0, 0, 157, 158, 5, 97, 0, 0,
		158, 159, 5, 114, 0, 0, 159, 12, 1, 0, 0, 0, 160, 161, 5, 102, 0, 0, 161,
		162, 5, 117, 0, 0, 162, 163, 5, 110, 0, 0, 163, 164, 5, 99, 0, 0, 164,
		14, 1, 0, 0, 0, 165, 166, 5, 115, 0, 0, 166, 167, 5, 116, 0, 0, 167, 168,
		5, 114, 0, 0, 168, 169, 5, 117, 0, 0, 169, 170, 5, 99, 0, 0, 170, 171,
		5, 116, 0, 0, 171, 16, 1, 0, 0, 0, 172, 173, 5, 105, 0, 0, 173, 174, 5,
		102, 0, 0, 174, 18, 1, 0, 0, 0, 175, 176, 5, 101, 0, 0, 176, 177, 5, 108,
		0, 0, 177, 178, 5, 115, 0, 0, 178, 179, 5, 101, 0, 0, 179, 20, 1, 0, 0,
		0, 180, 181, 5, 115, 0, 0, 181, 182, 5, 119, 0, 0, 182, 183, 5, 105, 0,
		0, 183, 184, 5, 116, 0, 0, 184, 185, 5, 99, 0, 0, 185, 186, 5, 104, 0,
		0, 186, 22, 1, 0, 0, 0, 187, 188, 5, 99, 0, 0, 188, 189, 5, 97, 0, 0, 189,
		190, 5, 115, 0, 0, 190, 191, 5, 101, 0, 0, 191, 24, 1, 0, 0, 0, 192, 193,
		5, 100, 0, 0, 193, 194, 5, 101, 0, 0, 194, 195, 5, 102, 0, 0, 195, 196,
		5, 97, 0, 0, 196, 197, 5, 117, 0, 0, 197, 198, 5, 108, 0, 0, 198, 199,
		5, 116, 0, 0, 199, 26, 1, 0, 0, 0, 200, 201, 5, 102, 0, 0, 201, 202, 5,
		111, 0, 0, 202, 203, 5, 114, 0, 0, 203, 28, 1, 0, 0, 0, 204, 205, 5, 119,
		0, 0, 205, 206, 5, 104, 0, 0, 206, 207, 5, 105, 0, 0, 207, 208, 5, 108,
		0, 0, 208, 209, 5, 101, 0, 0, 209, 30, 1, 0, 0, 0, 210, 211, 5, 98, 0,
		0, 211, 212, 5, 114, 0, 0, 212, 213, 5, 101, 0, 0, 213, 214, 5, 97, 0,
		0, 214, 215, 5, 107, 0, 0, 215, 32, 1, 0, 0, 0, 216, 217, 5, 99, 0, 0,
		217, 218, 5, 111, 0, 0, 218, 219, 5, 110, 0, 0, 219, 220, 5, 116, 0, 0,
		220, 221, 5, 105, 0, 0, 221, 222, 5, 110, 0, 0, 222, 223, 5, 117, 0, 0,
		223, 224, 5, 101, 0, 0, 224, 34, 1, 0, 0, 0, 225, 226, 5, 114, 0, 0, 226,
		227, 5, 101, 0, 0, 227, 228, 5, 116, 0, 0, 228, 229, 5, 117, 0, 0, 229,
		230, 5, 114, 0, 0, 230, 231, 5, 110, 0, 0, 231, 36, 1, 0, 0, 0, 232, 233,
		5, 103, 0, 0, 233, 234, 5, 117, 0, 0, 234, 235, 5, 97, 0, 0, 235, 236,
		5, 114, 0, 0, 236, 237, 5, 100, 0, 0, 237, 38, 1, 0, 0, 0, 238, 239, 5,
		105, 0, 0, 239, 240, 5, 110, 0, 0, 240, 241, 5, 111, 0, 0, 241, 242, 5,
		117, 0, 0, 242, 243, 5, 116, 0, 0, 243, 40, 1, 0, 0, 0, 244, 245, 5, 105,
		0, 0, 245, 246, 5, 110, 0, 0, 246, 42, 1, 0, 0, 0, 247, 249, 7, 2, 0, 0,
		248, 247, 1, 0, 0, 0, 249, 250, 1, 0, 0, 0, 250, 248, 1, 0, 0, 0, 250,
		251, 1, 0, 0, 0, 251, 44, 1, 0, 0, 0, 252, 254, 7, 2, 0, 0, 253, 252, 1,
		0, 0, 0, 254, 255, 1, 0, 0, 0, 255, 253, 1, 0, 0, 0, 255, 256, 1, 0, 0,
		0, 256, 257, 1, 0, 0, 0, 257, 259, 5, 46, 0, 0, 258, 260, 7, 2, 0, 0, 259,
		258, 1, 0, 0, 0, 260, 261, 1, 0, 0, 0, 261, 259, 1, 0, 0, 0, 261, 262,
		1, 0, 0, 0, 262, 46, 1, 0, 0, 0, 263, 268, 5, 34, 0, 0, 264, 267, 8, 3,
		0, 0, 265, 267, 3, 113, 56, 0, 266, 264, 1, 0, 0, 0, 266, 265, 1, 0, 0,
		0, 267, 270, 1, 0, 0, 0, 268, 266, 1, 0, 0, 0, 268, 269, 1, 0, 0, 0, 269,
		271, 1, 0, 0, 0, 270, 268, 1, 0, 0, 0, 271, 272, 5, 34, 0, 0, 272, 48,
		1, 0, 0, 0, 273, 274, 5, 116, 0, 0, 274, 275, 5, 114, 0, 0, 275, 276, 5,
		117, 0, 0, 276, 283, 5, 101, 0, 0, 277, 278, 5, 102, 0, 0, 278, 279, 5,
		97, 0, 0, 279, 280, 5, 108, 0, 0, 280, 281, 5, 115, 0, 0, 281, 283, 5,
		101, 0, 0, 282, 273, 1, 0, 0, 0, 282, 277, 1, 0, 0, 0, 283, 50, 1, 0, 0,
		0, 284, 285, 5, 110, 0, 0, 285, 286, 5, 105, 0, 0, 286, 287, 5, 108, 0,
		0, 287, 52, 1, 0, 0, 0, 288, 292, 7, 4, 0, 0, 289, 291, 7, 5, 0, 0, 290,
		289, 1, 0, 0, 0, 291, 294, 1, 0, 0, 0, 292, 290, 1, 0, 0, 0, 292, 293,
		1, 0, 0, 0, 293, 54, 1, 0, 0, 0, 294, 292, 1, 0, 0, 0, 295, 296, 5, 43,
		0, 0, 296, 56, 1, 0, 0, 0, 297, 298, 5, 45, 0, 0, 298, 58, 1, 0, 0, 0,
		299, 300, 5, 42, 0, 0, 300, 60, 1, 0, 0, 0, 301, 302, 5, 47, 0, 0, 302,
		62, 1, 0, 0, 0, 303, 304, 5, 37, 0, 0, 304, 64, 1, 0, 0, 0, 305, 306, 5,
		61, 0, 0, 306, 66, 1, 0, 0, 0, 307, 308, 5, 43, 0, 0, 308, 309, 5, 61,
		0, 0, 309, 68, 1, 0, 0, 0, 310, 311, 5, 45, 0, 0, 311, 312, 5, 61, 0, 0,
		312, 70, 1, 0, 0, 0, 313, 314, 5, 61, 0, 0, 314, 315, 5, 61, 0, 0, 315,
		72, 1, 0, 0, 0, 316, 317, 5, 33, 0, 0, 317, 318, 5, 61, 0, 0, 318, 74,
		1, 0, 0, 0, 319, 320, 5, 60, 0, 0, 320, 76, 1, 0, 0, 0, 321, 322, 5, 60,
		0, 0, 322, 323, 5, 61, 0, 0, 323, 78, 1, 0, 0, 0, 324, 325, 5, 62, 0, 0,
		325, 80, 1, 0, 0, 0, 326, 327, 5, 62, 0, 0, 327, 328, 5, 61, 0, 0, 328,
		82, 1, 0, 0, 0, 329, 330, 5, 38, 0, 0, 330, 331, 5, 38, 0, 0, 331, 84,
		1, 0, 0, 0, 332, 333, 5, 124, 0, 0, 333, 334, 5, 124, 0, 0, 334, 86, 1,
		0, 0, 0, 335, 336, 5, 33, 0, 0, 336, 88, 1, 0, 0, 0, 337, 338, 5, 40, 0,
		0, 338, 90, 1, 0, 0, 0, 339, 340, 5, 41, 0, 0, 340, 92, 1, 0, 0, 0, 341,
		342, 5, 123, 0, 0, 342, 94, 1, 0, 0, 0, 343, 344, 5, 125, 0, 0, 344, 96,
		1, 0, 0, 0, 345, 346, 5, 91, 0, 0, 346, 98, 1, 0, 0, 0, 347, 348, 5, 93,
		0, 0, 348, 100, 1, 0, 0, 0, 349, 350, 5, 44, 0, 0, 350, 102, 1, 0, 0, 0,
		351, 352, 5, 46, 0, 0, 352, 104, 1, 0, 0, 0, 353, 354, 5, 58, 0, 0, 354,
		106, 1, 0, 0, 0, 355, 356, 5, 45, 0, 0, 356, 357, 5, 62, 0, 0, 357, 108,
		1, 0, 0, 0, 358, 359, 5, 63, 0, 0, 359, 110, 1, 0, 0, 0, 360, 361, 5, 38,
		0, 0, 361, 112, 1, 0, 0, 0, 362, 363, 5, 92, 0, 0, 363, 364, 7, 6, 0, 0,
		364, 114, 1, 0, 0, 0, 12, 0, 118, 128, 132, 142, 250, 255, 261, 266, 268,
		282, 292, 1, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// TSwiftLexerInit initializes any static state used to implement TSwiftLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewTSwiftLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func TSwiftLexerInit() {
	staticData := &TSwiftLexerLexerStaticData
	staticData.once.Do(tswiftlexerLexerInit)
}

// NewTSwiftLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewTSwiftLexer(input antlr.CharStream) *TSwiftLexer {
	TSwiftLexerInit()
	l := new(TSwiftLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &TSwiftLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "TSwiftLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// TSwiftLexer tokens.
const (
	TSwiftLexerWS                    = 1
	TSwiftLexerCOMMENT               = 2
	TSwiftLexerMULTILINE_COMMENT     = 3
	TSwiftLexerSEMICOLON             = 4
	TSwiftLexerLET_KW                = 5
	TSwiftLexerVAR_KW                = 6
	TSwiftLexerFUNC_KW               = 7
	TSwiftLexerSTRUCT_KW             = 8
	TSwiftLexerIF_KW                 = 9
	TSwiftLexerELSE_KW               = 10
	TSwiftLexerSWITCH_KW             = 11
	TSwiftLexerCASE_KW               = 12
	TSwiftLexerDEFAULT_KW            = 13
	TSwiftLexerFOR_KW                = 14
	TSwiftLexerWHILE_KW              = 15
	TSwiftLexerBREAK_KW              = 16
	TSwiftLexerCONTINUE_KW           = 17
	TSwiftLexerRETURN_KW             = 18
	TSwiftLexerGUARD_KW              = 19
	TSwiftLexerINOUT_KW              = 20
	TSwiftLexerIN_KW                 = 21
	TSwiftLexerINTEGER_LITERAL       = 22
	TSwiftLexerFLOAT_LITERAL         = 23
	TSwiftLexerSTRING_LITERAL        = 24
	TSwiftLexerBOOL_LITERAL          = 25
	TSwiftLexerNIL_LITERAL           = 26
	TSwiftLexerID                    = 27
	TSwiftLexerPLUS                  = 28
	TSwiftLexerMINUS                 = 29
	TSwiftLexerMULT                  = 30
	TSwiftLexerDIV                   = 31
	TSwiftLexerMOD                   = 32
	TSwiftLexerEQUALS                = 33
	TSwiftLexerPLUS_EQUALS           = 34
	TSwiftLexerMINUS_EQUALS          = 35
	TSwiftLexerEQUALS_EQUALS         = 36
	TSwiftLexerNOT_EQUALS            = 37
	TSwiftLexerLESS_THAN             = 38
	TSwiftLexerLESS_THAN_OR_EQUAL    = 39
	TSwiftLexerGREATER_THAN          = 40
	TSwiftLexerGREATER_THAN_OR_EQUAL = 41
	TSwiftLexerAND                   = 42
	TSwiftLexerOR                    = 43
	TSwiftLexerNOT                   = 44
	TSwiftLexerLPAREN                = 45
	TSwiftLexerRPAREN                = 46
	TSwiftLexerLBRACE                = 47
	TSwiftLexerRBRACE                = 48
	TSwiftLexerLBRACK                = 49
	TSwiftLexerRBRACK                = 50
	TSwiftLexerCOMMA                 = 51
	TSwiftLexerDOT                   = 52
	TSwiftLexerCOLON                 = 53
	TSwiftLexerARROW                 = 54
	TSwiftLexerINTERROGATION         = 55
	TSwiftLexerANPERSAND             = 56
)
